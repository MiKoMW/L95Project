1. The old car broke down in the car park.

1	The	_	DT	_	3	det :D
2	old	_	JJ	_	3	amod :D
3	car	_	NN	_	4	nsubj :D
4	broke	_	VBD	_	0	ROOT ：D
5	down	_	RP	_	4	compound:prt :D
6	in	_	IN	_	9	case :(
7	the	_	DT	_	9	det :D
8	car	_	NN	_	9	compound :D
9	park	_	NN	_	4	obl :D
10	.	_	.	_	4	punct :D



2. At least two men broke in and stole my TV.

1	At	_	IN	_	2	case :(
2	least	_	JJS	_	3	obl:npmod :D
3	two	_	CD	_	4	nummod :D
4	men	_	NNS	_	5	nsubj :D
5	broke	_	VBD	_	0	ROOT :D
6	in	_	IN	_	5	compound:prt :D
7	and	_	CC	_	8	cc :D
8	stole	_	VBD	_	5	conj :D
9	my	_	PRP$	_	10	nmod:poss :D
10	TV	_	NN	_	8	obj :D
11	.	_	.	_	5	punct :D


3. The horses were broken in and ridden in two weeks.
1	The	_	DT	_	2	det
2	horses	_	NNS	_	4	nsubj:pass :D
3	were	_	VBD	_	4	aux:pass :D
4	broken	_	VBN	_	0	ROOT :D
5	in	_	RP	_	4	compound:prt :D
6	and	_	CC	_	7	cc :D
7	ridden	_	VBN	_	4	conj :D
8	in	_	IN	_	10	case ：D
9	two	_	CD	_	10	nummod
10	weeks	_	NNS	_	4	obl
11	.	_	.	_	4	punct



7. It was my aunt’s car which we sold at auction last year in February.
1	It	_	PRP	_	6	nsubj
2	was	_	VBD	_	6	cop ：D
3	my	_	PRP$	_	4	nmod:poss ：D
4	aunt	_	NN	_	6	nmod:poss ：D
5	’s	_	POS	_	4	case
6	car	_	NN	_	0	ROOT
7	which	_	WDT	_	9	obj
8	we	_	PRP	_	9	nsubj
9	sold	_	VBD	_	6	acl:relcl :D
10	at	_	IN	_	11	case
11	auction	_	NN	_	9	obl
12	last	_	JJ	_	13	amod
13	year	_	NN	_	9	obl:tmod
14	in	_	IN	_	15	case
15	February	_	NNP	_	9	obl
16	.	_	.	_	6	punct


8. The only rabbit that I ever liked was eaten by my parents one summer.
1	The	_	DT	_	3	det
2	only	_	JJ	_	3	amod
3	rabbit	_	NN	_	9	nsubj:pass
4	that	_	WDT	_	7	obj
5	I	_	PRP	_	7	nsubj
6	ever	_	RB	_	7	advmod
7	liked	_	VBD	_	3	acl:relcl
8	was	_	VBD	_	9	aux:pass
9	eaten	_	VBN	_	0	ROOT
10	by	_	IN	_	12	case
11	my	_	PRP$	_	12	nmod:poss
12	parents	_	NNS	_	9	obl
13	one	_	CD	_	14	nummod
14	summer	_	NN	_	9	obl:tmod
15	.	_	.	_	9	punct


15. English also has many words of more or less unique function, including interjections (oh, ah), negatives (no, not), politeness markers (please, thank you), and the existential ‘there’ (there are horses but not unicorns) among others.
1	English	_	NNP	_	3	nsubj
2	also	_	RB	_	3	advmod
3	has	_	VBZ	_	0	ROOT
4	many	_	JJ	_	5	amod
5	words	_	NNS	_	3	obj
6	of	_	IN	_	11	case
7	more	_	RBR	_	10	advmod
8	or	_	CC	_	9	cc
9	less	_	RBR	_	7	conj
10	unique	_	JJ	_	11	amod
11	function	_	NN	_	5	nmod
12	,	_	,	_	5	punct
13	including	_	VBG	_	14	case
14	interjections	_	NNS	_	5	nmod
15	(	_	-LRB-	_	14	punct
16	oh	_	UH	_	14	discourse
17	,	_	,	_	16	punct
18	ah	_	UH	_	16	dep
19	)	_	-RRB-	_	14	punct
20	,	_	,	_	14	punct
21	negatives	_	NNS	_	14	conj
22	(	_	-LRB-	_	25	punct
23	no	_	UH	_	25	discourse
24	,	_	,	_	25	punct
25	not	_	RB	_	21	dep
26	)	_	-RRB-	_	25	punct
27	,	_	,	_	14	punct
28	politeness	_	NN	_	29	compound
29	markers	_	NNS	_	14	conj
30	(	_	-LRB-	_	33	punct
31	please	_	UH	_	33	discourse
32	,	_	,	_	33	punct
33	thank	_	VBP	_	29	dep
34	you	_	PRP	_	33	obj
35	)	_	-RRB-	_	33	punct
36	,	_	,	_	14	punct
37	and	_	CC	_	14	dep
38	the	_	DT	_	37	dep
39	existential	_	JJ	_	45	dep
40	‘	_	``	_	45	punct
41	there	_	EX	_	45	expl
42	’	_	''	_	45	punct
43	(	_	-LRB-	_	45	punct
44	there	_	EX	_	45	expl
45	are	_	VBP	_	38	dep
46	horses	_	NNS	_	45	nsubj
47	but	_	CC	_	48	cc
48	not	_	RB	_	49	cc
49	unicorns	_	NNS	_	46	conj
50	)	_	-RRB-	_	46	punct
51	among	_	IN	_	52	case
52	others	_	NNS	_	46	nmod
53	.	_	.	_	3	punct


16.a. Making these decisions requires sophisticated knowledge of syntax; tagging manuals (Santorini, 1990) give various heuristics that can help human coders make these decisions and that can also provide useful features for automatic taggers.

1	Making	_	VBG	_	4	aux :D
2	these	_	DT	_	3	det
3	decisions	_	NNS	_	4	nsubj
4	requires	_	VBZ	_	0	ROOT
5	sophisticated	_	JJ	_	6	amod
6	knowledge	_	NN	_	4	obj
7	of	_	IN	_	8	case
8	syntax	_	NN	_	6	nmod
9	;	_	:	_	4	punct 
10	tagging	_	VBG	_	11	amod
11	manuals	_	NNS	_	16	nsubj
12	(	_	-LRB-	_	11	punct
13	Santorini	_	NNP	_	14	compound
14	,1990	_	NN	_	11	dep
15	)	_	-RRB-	_	11	punct
16	give	_	VBP	_	4	parataxis
17	various	_	JJ	_	18	amod
18	heuristics	_	NNS	_	16	obj
19	that	_	WDT	_	21	nsubj
20	can	_	MD	_	21	aux
21	help	_	VB	_	18	acl:relcl
22	human	_	JJ	_	23	amod
23	coders	_	NNS	_	24	nsubj
24	make	_	VBP	_	21	ccomp
25	these	_	DT	_	26	det
26	decisions	_	NNS	_	24	obj
27	and	_	CC	_	31	cc
28	that	_	DT	_	31	nsubj
29	can	_	MD	_	31	aux
30	also	_	RB	_	31	advmod
31	provide	_	VB	_	21	conj
32	useful	_	JJ	_	33	amod
33	features	_	NNS	_	31	obj
34	for	_	IN	_	36	case
35	automatic	_	JJ	_	36	amod
36	taggers	_	NNS	_	33	nmod
37	.	_	.	_	4	punct

17.a. The Penn Treebank tagset was culled from the original 87-tag tagset for the Brown Corpus.
1	The	_	DT	_	4	det
2	Penn	_	NNP	_	3	compound
3	Treebank	_	NNP	_	4	compound
4	tagset	_	NN	_	6	nsubj:pass
5	was	_	VBD	_	6	aux:pass
6	culled	_	VBN	_	0	ROOT
7	from	_	IN	_	13	case
8	the	_	DT	_	13	det
9	original	_	JJ	_	13	amod
10	87	_	CD	_	12	nummod
11	-	_	HYPH	_	12	punct
12	tag	_	NN	_	13	compound
13	tagset	_	NN	_	6	obl
14	for	_	IN	_	17	case
15	the	_	DT	_	17	det
16	Brown	_	NNP	_	17	compound
17	Corpus	_	NNP	_	13	nmod
18	.	_	.	_	6	punct

17.b. For example the original Brown and C5 tagsets include a separate tag for each of the different forms of the verbs do (e.g. C5 tag VDD for did and VDG tag for doing), be and have.
1	For	_	IN	_	2	case
2	example	_	NN	_	9	obl
3	the	_	DT	_	8	det
4	original	_	JJ	_	8	amod
5	Brown	_	NNP	_	8	compound
6	and	_	CC	_	7	cc
7	C5	_	NN	_	5	conj
8	tagsets	_	NNS	_	9	nsubj
9	include	_	VBP	_	0	ROOT
10	a	_	DT	_	12	det
11	separate	_	JJ	_	12	amod
12	tag	_	NN	_	9	obj
13	for	_	IN	_	14	case
14	each	_	DT	_	12	nmod
15	of	_	IN	_	18	case
16	the	_	DT	_	18	det
17	different	_	JJ	_	18	amod
18	forms	_	NNS	_	14	nmod
19	of	_	IN	_	21	case
20	the	_	DT	_	21	det
21	verbs	_	NNS	_	18	nmod
22	do	_	VBP	_	12	acl
23	(	_	-LRB-	_	27	punct
24	e.g.	_	FW	_	27	advmod
25	C5	_	NN	_	27	compound
26	tag	_	NN	_	27	compound
27	VDD	_	NN	_	22	dep
28	for	_	IN	_	27	dep
29	did	_	VBD	_	28	dep
30	and	_	CC	_	32	cc
31	VDG	_	NNP	_	32	compound
32	tag	_	NN	_	29	conj
33	for	_	IN	_	34	case
34	doing	_	VBG	_	29	dep
35	)	_	-RRB-	_	34	punct
36	,	_	,	_	34	punct
37	be	_	VB	_	34	dep
38	and	_	CC	_	39	cc
39	have	_	VB	_	37	conj
40	.	_	.	_	27	punct

18. The slightly simplified version of the Viterbi algorithm that we present takes as input a single HMM and a sequence of observed words O = (o1,o2,...oT) and returns the most probable state/tag sequence Q = (q1,q2,qT) together with its probability.
1	The	_	DT	_	4	det
2	slightly	_	RB	_	3	advmod
3	simplified	_	VBN	_	4	amod
4	version	_	NN	_	0	ROOT
5	of	_	IN	_	8	case
6	the	_	DT	_	8	det
7	Viterbi	_	NNP	_	8	compound
8	algorithm	_	NN	_	4	nmod
9	that	_	WDT	_	11	obj
10	we	_	PRP	_	11	nsubj
11	present	_	VBP	_	8	acl:relcl
12	takes	_	VBZ	_	11	obj
13	as	_	IN	_	14	case
14	input	_	NN	_	11	obl
15	a	_	DT	_	17	det
16	single	_	JJ	_	17	amod
17	HMM	_	NN	_	14	obj
18	and	_	CC	_	20	cc
19	a	_	DT	_	20	det
20	sequence	_	NN	_	17	conj
21	of	_	IN	_	20	acl
22	observed	_	VBN	_	21	acl
23	words	_	NNS	_	22	obj
24	O	_	NN	_	27	nsubj
25	=	_	SYM	_	27	dep
26	(	_	-LRB-	_	27	punct
27	o1	_	NN	_	23	dep
28	,	_	,	_	27	punct
29	o2	_	NN	_	27	conj
30	,	_	,	_	27	punct
31	...	_	:	_	27	punct
32	oT	_	NN	_	27	dep
33	)	_	-RRB-	_	23	punct
34	and	_	CC	_	35	cc
35	returns	_	VBZ	_	23	conj
36	the	_	DT	_	35	obj
37	most	_	RBS	_	38	advmod
38	probable	_	JJ	_	36	amod
39	state	_	NN	_	41	compound
40	/	_	HYPH	_	41	punct
41	tag	_	NN	_	43	compound
42	sequence	_	NN	_	43	compound
43	Q	_	NN	_	46	nsubj
44	=	_	SYM	_	46	dep
45	(	_	-LRB-	_	46	punct
46	q1	_	NN	_	38	dep
47	,	_	,	_	46	punct
48	q2	_	NN	_	46	conj
49	,	_	,	_	46	punct
50	qT	_	NN	_	46	dep
51	)	_	-RRB-	_	46	punct
52	together	_	RB	_	55	advmod
53	with	_	IN	_	55	case
54	its	_	PRP$	_	55	nmod:poss
55	probability	_	NN	_	46	obl
56	.	_	.	_	4	punct

19. Thus the EM-trained “pure HMM” tagger is probably best suited to cases where no training data is available, for example, when tagging languages for which no data was previously hand-tagged.
1	Thus	_	RB	_	10	advmod
2	the	_	DT	_	8	det
3	EM	_	NNP	_	5	obl
4	-	_	HYPH	_	5	punct
5	trained	_	VBN	_	8	amod
6	“	_	``	_	8	punct
7	pure	_	JJ	_	8	amod
8	HMM	_	NN	_	10	nsubj
9	”	_	''	_	10	punct
10	tagger	_	NN	_	14	nsubj:pass
11	is	_	VBZ	_	14	aux:pass
12	probably	_	RB	_	14	advmod
13	best	_	JJS	_	14	advmod
14	suited	_	VBN	_	0	ROOT
15	to	_	IN	_	16	case
16	cases	_	NNS	_	14	obl
17	where	_	WRB	_	22	advmod
18	no	_	DT	_	20	det
19	training	_	NN	_	20	compound
20	data	_	NNS	_	22	nsubj
21	is	_	VBZ	_	22	cop
22	available	_	JJ	_	16	acl:relcl
23	,	_	,	_	22	punct
24	for	_	IN	_	25	case
25	example	_	NN	_	22	obl
26	,	_	,	_	22	punct
27	when	_	WRB	_	22	dep
28	tagging	_	VBG	_	29	amod
29	languages	_	NNS	_	27	dep
30	for	_	IN	_	31	case
31	which	_	WDT	_	38	obl
32	no	_	DT	_	33	det
33	data	_	NNS	_	38	nsubj:pass
34	was	_	VBD	_	38	aux:pass
35	previously	_	RB	_	38	advmod
36	hand	_	NN	_	38	dep
37	-	_	HYPH	_	38	punct
38	tagged	_	VBN	_	29	acl:relcl
39	.	_	.	_	14	punct